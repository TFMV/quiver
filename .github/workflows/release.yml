name: Release

on:
  push:
    tags:
      - "v*"

# Skip this workflow
jobs:
  go-release:
    # Skip this workflow
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  python-release:
    # Skip this workflow
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          cd quiver/python
          python -m build

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: quiver/python/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: quiver/python/dist/

  create-release:
    # Skip this workflow
    if: ${{ false }}
    needs: [go-release, python-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git tag --sort=-creatordate | grep -v $(git describe --tags) | head -n 1)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          if [ -z "$PREVIOUS_TAG" ]; then
            git log --pretty=format:"* %s (%h)" $(git describe --tags) >> $GITHUB_OUTPUT
          else
            git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..$(git describe --tags) >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Quiver ${{ steps.get_version.outputs.VERSION }}

            ${{ steps.changelog.outputs.CHANGELOG }}

            ### Installation

            #### Go
            ```
            go get github.com/username/quiver@v${{ steps.get_version.outputs.VERSION }}
            ```

            #### Python
            ```
            pip install quiver==${{ steps.get_version.outputs.VERSION }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
