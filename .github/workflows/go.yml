name: CI - Quiver

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:

  lint:
    name: Go Lint & Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

      - name: Run Linter
        run: golangci-lint run ./... --timeout=5m

  security:
    name: Go Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  test:
    name: Go Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Restore Go Module Cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-mod-${{ runner.os }}-

      - name: Install Dependencies
        run: go mod download

      - name: Run Tests with Coverage
        run: |
          go test -coverprofile=coverage.out -v ./...
          go tool cover -func=coverage.out

      - name: Upload Test Coverage Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out

  build:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build Binary
        run: go build -o quiver ./cmd/main.go

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: quiver-binary
          path: quiver

  release:
    name: Release on Tag
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: quiver-binary
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: quiver
          body: "Automated release for Quiver - Version ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
